# production ready dockerfile that runs pnpm start
FROM node:20.12.2-alpine3.19

# set up railway vars
ARG RAILWAY_ENVIRONMENT
ARG ALTO_RPC_URL
ARG ALTO_EXECUTOR_PRIVATE_KEYS
ARG ALTO_UTILITY_PRIVATE_KEY
ARG SENTRY_DSN
ARG PORT

# set working directory
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++ envsubst

# install typescript
RUN npm add -g typescript

# copy package.json and pnpm-lock.yaml
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# install pnpm and create global pnpm symlink
RUN corepack install && corepack enable

# copy source code
COPY . .

RUN pnpm fetch

# install dependencies
RUN pnpm install -r

# copy source code
RUN pnpm build

# copy config template
COPY config.base.json.template ./config.base.json.template

# replace variables in config template
RUN envsubst < config.base.json.template > config.base.json

# expose port
EXPOSE 4337

# start app
ENTRYPOINT ["pnpm", "start-base"]
